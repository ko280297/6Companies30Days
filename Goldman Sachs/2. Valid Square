class Solution {
public:
    int getlength(vector<int>a,vector<int>b){
        int l;
        l=(a[0]-b[0])*(a[0]-b[0])+(a[1]-b[1])*(a[1]-b[1]);
        return l;
    }
    bool validSquare(vector<int>& p1, vector<int>& p2, vector<int>& p3, vector<int>& p4) {
    if(p1==p2 || p1==p3 || p1==p4 ||p2==p3 ||p2==p4 || p3==p4 ){
        return false;
    }
else{
     vector<int>V{getlength(p1,p2),getlength(p1,p3),getlength(p1,p4),getlength(p2,p3),getlength(p2,p4),getlength(p3,p4)};
    int count=0;
 unordered_map<int,int>m;
    for(auto x: V){
        if(m.count(x)==0){
            m.insert({x,1});
        }
        else
            m[x]++;
    }
    if(m.size()!=2){
        return false;
    }
    else
        for(auto y:m)
           { if(y.second==4 || y.second==2)
                return true;
        }
            
                
    return false;
    }
    }
};
